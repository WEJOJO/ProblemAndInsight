문제1.
----------------------------------------------------------------------------------------------------------------------------------------------------------------
수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.

마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.

제한사항
마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.
completion의 길이는 participant의 길이보다 1 작습니다.
참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.
참가자 중에는 동명이인이 있을 수 있습니다.
입출력 예
participant	completion	return
["leo", "kiki", "eden"]	["eden", "kiki"]	"leo"
["marina", "josipa", "nikola", "vinko", "filipa"]	["josipa", "filipa", "marina", "nikola"]	"vinko"
["mislav", "stanko", "mislav", "ana"]	["stanko", "ana", "mislav"]	"mislav"
입출력 예 설명
예제 #1
"leo"는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.

예제 #2
"vinko"는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.

예제 #3
"mislav"는 참여자 명단에는 두 명이 있지만, 완주자 명단에는 한 명밖에 없기 때문에 한명은 완주하지 못했습니다.
----------------------------------------------------------------------------------------------------------------------------------------------------------------
pop의 연산은 맨뒤부터 해야 상수시간이 소요되기 때문에 정렬한 뒤, 뒤에서부터 대소비교를해서 적어도 participant.pop만큼은 상수시간을 사용하도록
completion의 사용시간은 미리 정렬해놓았기 때문에 절대 길이와 비례하는 비교연산횟수와 pop연산을 가지지 않을거라 생각하고 해당 코드를 작성했음

:::내 코드
def solution(participant, completion):
    answer = ''
    participant.sort()
    completion.sort()
    
    k=1
    while len(completion)>=k:
        #k completion
        if participant[-1] == completion[-k]:
            participant.pop()
            completion.pop(-k)
            k=1
        else:
            k+=1
    answer=participant[-1]

    return answer
    
    
    
