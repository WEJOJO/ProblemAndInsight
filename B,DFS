DFS/BFS도 문제 유형을 보자마자 나누는것은 가능하겠다.
다만 완전탐색과의 차이를 보면 내가 원하는 것만 따라서 순회 혹은 참조한다는 점이 매우 다르다고 볼 수있다.

문제2. 
미로탈출 문제

m,n=input().split()

m=int(m)
n=int(n)

L=[]

for i in range(n):
    L.append(list(map(int,input())))
#입력 받기

def dfs(y,x):
    if y>=n or x>=m or y<=-1 or x<=-1 or L[y][x]==0:
        return 40001
    else:
        if y==n-1 and x==m-1:
            return 1
        min=40001
        L[y][x]=0
        #최솟값 비교
        k=dfs(y,x+1)
        if min >= k:
            min=k
        k=dfs(y+1,x)
        if min >= k:
            min=k
        k=dfs(y,x-1)
        if min >= k:
            min=k
        k=dfs(y-1,x)
        if min >= k:
            min=k
        L[y][x]=1
        return min+1

print(dfs(0,0))
